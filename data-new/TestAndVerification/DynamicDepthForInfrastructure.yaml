_yaml_references:
  tools:
    ci-cd: &ci-cd CI/CD tools, eg. Jenkins
    containers: &containers Container technologies and orchestration like Docker,
      Kubernetes
    dependabot: &dependabot >-
      https://dependabot.com
    httpunit: &httpunit HttpUnit
    junit: &junit junit
    karma-runner: &karma https://github.com/karma-runner/karma
    curl: &curl cURL
    owasp-zap: &owasp-zap OWASP Zed Attack Proxy
    selenium: &selenium Selenium
    kube-hunter: &kube-hunter >-
      [kube-hunter](https://github.com/aquasecurity/kube-hunter)
    openvas: &openvas OpenVAS
    netassert: &netassert >-
      https://github.com/controlplaneio/netassert
    nmap: &nmap nmap
    owasp-amass: &owasp-amass >-
      [OWASP Amass](https://github.com/OWASP/Amass)
Dynamic depth for infrastructure:
  Load tests:
    risk: As it is unknown how many requests the systems and applications can serve,
      due to an unexpected load the availability is disturbed.
    measure: Load test against the production system or a production near system is
      performed.
    difficultyOfImplementation:
      knowledge: 3
      time: 2
      resources: 5
    usefulness: 3
    level: 4
    references:
    - samm2:V-ST-1-A
    - iso27001-2017:12.1.3
    - iso27001-2017:14.2.3
    - iso27001-2017:14.2.8
  Test of the configuration of cloud environments:
    risk: Standard hardening practices for cloud environments are not performed leading
      to vulnerabilities.
    measure: With the help of tools the configuration of virtual environments are
      tested.
    difficultyOfImplementation:
      knowledge: 2
      time: 2
      resources: 1
    usefulness: 4
    level: 2
    implementation:
    - *kube-hunter
    - *openvas
    references:
    - samm:EH2-B
    - iso27001-2017:system hardening is not explicitly covered by ISO 27001 - too
      specific
    - iso27001-2017:12.6.1
    - iso27001-2017:14.2.3
    - iso27001-2017:14.2.8
  Weak password test:
    risk: Weak passwords in components like applications or systems, specially for
      privileged accounts, lead to take over of that account.
    measure: Automatic brute force attacks are performed. Specially the usage of standard
      accounts like 'admin' and employee user-ids is recommended.
    difficultyOfImplementation:
      knowledge: 2
      time: 1
      resources: 1
    usefulness: 1
    level: 3
    implementation:
    - HTC Hydra
    references:
    - samm2:V-ST-2-A
    - iso27001-2017:9.4.3
  Test network segmentation:
    risk: Wrong or no network segmentation of pods makes it easyer for an attacker
      to access a database and extract or modify data.
    measure: Cluster interal test needs to be performed. Integration of fine granulated
      network segmenation (also between pods in the same namespace).
    difficultyOfImplementation:
      knowledge: 2
      time: 2
      resources: 1
    usefulness: 3
    level: 2
    implementation:
    - *netassert
    dependendsOn: Segmented networks for virtual environments
    references:
    - samm2:V-ST-2-A
    - iso27001-2017:13.1.3
    - iso27001-2017:14.2.3
    - iso27001-2017:14.2.8
  Test for exposed services:
    risk: Standard network segmentation and firewalling has not been performed, leading
      to world open cluster management ports.
    measure: With the help of tools the network configuration of unintenonal exposed
      cluster(s) are tested. To identify clusters, all subdomains might need to be
      identified with a tool like OWASP Amass to perform portscans based o the result.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 3
    level: 1
    implementation:
    - *nmap
    - *owasp-amass
    references:
    - samm:EH2-B
    - samm2:V-ST-1-A
    - iso27001-2017:13.1.3
    - iso27001-2017:14.2.3
    - iso27001-2017:14.2.8
