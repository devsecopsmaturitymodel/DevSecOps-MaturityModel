---
_yaml_references:
  tools:
    ci-cd: &ci-cd CI/CD tools, eg. Jenkins
    containers: &containers Container technologies and orchestration like Docker, Kubernetes
    dependabot: &dependabot <a href="https://dependabot.com/">dependabot</a>
    httpunit: &httpunit HttpUnit
    junit: &junit junit
    karma-runner: &karma https://github.com/karma-runner/karma
    curl: &curl cURL
    owasp-zap: &owasp-zap OWASP Zed Attack Proxy
    selenium: &selenium Selenium

Test-Intensity:
  Regular tests:
    risk: After pushing source code to the version control system, any delay in receiving
      feedback on defects makes them harder for the developer to remediate.
    measure: On each push and/or at given intervals automatic security tests are performed.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 2
    level: 2
    implementation: []
    samm2: i-secure-build|A|3
    iso27001-2017:
    - 14.2.3
    - 14.2.8
    - 14.2.9
  Creation and application of a testing concept:
    risk: Scans might use a too small or too high test intensity.
    measure: A testing concept considering the amount of time per scan/intensity is
      created and applied. A dynamic analysis needs more time than a static analysis.
      The dynamic scan, depending on the test intensity might be performed on every
      commit, every night, every week or once in a month.
    difficultyOfImplementation:
      knowledge: 3
      time: 3
      resources: 3
    usefulness: 2
    level: 3
    samm2: v-security-testing|A|2
    iso27001-2017:
    - 14.2.2
    - 14.2.3
    - 14.2.1
    - 14.2.5
    - 12.6.1
  Deactivating of unneeded tests:
    risk: As tools cover a wide range of different vulnerability tests, they might
      not match the used components. Therefore, they need more time and resources
      as they need and the feedback loops takes too much time.
    measure: Unneeded tests are deactivated. For example in case the service is using
      a Mongo database and no mysql database, the dynamic scan doesn't need to test
      for sql injections.
    difficultyOfImplementation:
      knowledge: 2
      time: 3
      resources: 1
    usefulness: 1
    level: 2
    samm2: v-security-testing|A|2
    iso27001-2017:
    - 12.6.1
    - 14.2.1
    - 14.2.5
  Default settings for intensity:
    risk: Time pressure and ignorance might lead to false predictions for the test
      intensity.
    measure: The intensity of the used tools are not modified to safe time.
    difficultyOfImplementation:
      knowledge: 1
      time: 1
      resources: 1
    usefulness: 1
    level: 1
    samm2: v-security-testing|A|1
    iso27001-2017:
    - 12.6.1
    - 14.2.1
    - 14.2.5
  High test intensity:
    risk: A too small intensity or a too high confidence might lead to not visible
      vulnerabilities.
    measure: A deep scan with high test intensity and a low confidence threshold is
      performed.
    difficultyOfImplementation:
      knowledge: 3
      time: 3
      resources: 5
    usefulness: 3
    level: 1
    samm2: v-security-testing|A|2
    iso27001-2017:
    - 12.6.1
    - 14.2.1
    - 14.2.5
...
