---
Implementation:
  Development and Source Control:
    Local development linting & style checks performed:
      risk: Insecure or unmaintenable code base.
      measure: >-
        Integrate static code analysis tools in IDEs.
      difficultyOfImplementation:
        knowledge: 1
        time: 1
        resources: 1
      usefulness: 2
      level: 4
      description: ""
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/stylecop
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/sonarqube
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/spotbugs
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/super-linter
      references:
        samm2:
        - V-ST-1-A
        iso27001-2017: []
      isImplemented: false
      evidence: ""
      comments: ""
    Pre-Commit checks and validations:
      risk: Using an insecure application might lead to a compromised application.
        This might lead to total data theft or data modification.
      measure: |
        Implement pre-commit checks to prevent secrets & other security issues being commit to source code.
      difficultyOfImplementation:
        knowledge: 4
        time: 4
        resources: 2
      usefulness: 4
      level: 2
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/pre-commit-microsoft
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/pre-commit-synopsis
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/pre-commit-python
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/tw-talisman
      references:
        samm2:
        - V-ST-1-A
        iso27001-2017: []
      isImplemented: false
      evidence: ""
      comments: ""
    API design validation:
      risk: Creation of insecure or non-compliant API.
      measure: |
        Design contract-first APIs using an interface description language such as OpenAPI, AsyncAPI or SOAP
        and validate the specification using specific tools.
        Checks should be integrated in IDEs and CI/CD pipelines.
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 2
      usefulness: 4
      level: 2
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/stoplight-spectral
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/api-oas-checker
      references:
        samm2:
        - V-ST-1-A
        iso27001-2017:
        - 8.25  # Secure development lifecycle
        - 8.27  # Secure system architecture and engineering principles
        - 8.28  # Secure coding
      isImplemented: false
      evidence: ""
      comments: ""
    Source Control Protection:
      risk: Intentional or accidental alterations in critical branches like master.
      measure: >-
        Define source code management system policies (e.g. branch protection rules,
        mandatory code reviews, ...)
        to ensure that changes to critical branches are only possible under defined conditions.
        These policies can be implemented at repository level or organization level,
        depending on the source code management system.
      difficultyOfImplementation:
        knowledge: 2
        time: 1
        resources: 2
      usefulness: 4
      level: 1
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/azuredevops
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/github-policies
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/signing-of-commits-protection
      references:
        samm2:
        - O-EM-1-A
        iso27001-2017:
        - peer review - four eyes principle is not explicitly required by ISO 27001
        - 6.1.2
        - 14.2.1
      isImplemented: false
      evidence: ""
      comments: ""
    Versioning:
      risk: Deployment of untracked artifacts.
      measure: >-
        Version artifacts in order to identify deployed features and issues.
        This includes application and infrastructure code, jenkins configuration, container and virtual machine images.
      difficultyOfImplementation:
        knowledge: 3
        time: 3
        resources: 3
      usefulness: 5
      level: 1
      dependsOn:
      - Defined deployment process
      implementation: []
      references:
        samm2:
        - O-EM-1-A
        iso27001-2017:
        - not explicitly covered by ISO 27001 - too specific
        - 12.1.1
        - 12.1.2
        - 14.2.2
      isImplemented: false
      evidence: ""
      comments: ""
    MFA to SCM:
      risk: Unauthorized access to source code.
      measure: >-
        Enforce Multi-Factor authentication to source code management platforms.
        These policies can be implemented at repository level or organization level,
        depending on the source code management system.
      difficultyOfImplementation:
        knowledge: 2
        time: 1
        resources: 2
      usefulness: 4
      level: 1
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/yubikey
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/totp
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/smartcard
      references:
        samm2:
        - O-EM-1-A
        iso27001-2017:
        - 5.17    # Authentication information
        - 6.1.2   # Segregation of duties.
        - 14.2.1  # Secure development policies.
        d3f:
        - Multi-factorAuthentication
      isImplemented: false
      evidence: ""
      comments: ""
...
