---
Build and Deployment:
  Patch Management:
    A patch policy is defined:
      risk: &exploit-known-vulnerabilities Exploit of known vulnerabilities in long-running artifacts.
      measure: >-
        A patch policy for all artifacts (e.g. in container images) is defined.
        Images are periodically rebuilt according to a defined policy.
      difficultyOfImplementation:
        knowledge: 3
        time: 1
        resources: 2
      usefulness: 4
      level: 1
      implementation: []
      references:
        samm2:
        - O-EM-1-B
        iso27001-2017:
        - 12.6.1
        - 12.5.1
        - 14.2.5
        d3f:
        # PlatformHardening
        - SoftwareUpdate
      isImplemented: false
      evidence: ""
      comments: ""
    Automated PRs for patches:
      risk: *exploit-known-vulnerabilities
      measure: |-
        Fast patching of third party component is needed. The DevOps way is
        to have an automated pull request for new components. This includes:

        - Applications
        - Virtualized operating system components (e.g. container images)
        - Operating Systems
        - Infrastructure as Code/GitOps (e.g. argocd)

      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 2
      usefulness: 5
      level: 1
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/dependabot
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/jenkins
      references:
        samm2:
        - O-EM-1-B
        iso27001-2017:
        - 12.6.1
        - 14.2.5
      isImplemented: false
      evidence: ""
      comments: ""
    Nightly build of images (base images):
      risk: Vulnerabilities in running containers stay for too long and might get
        exploited.
      measure: Custom base images are getting build at least nightly. In case the
        packages in the base image e.g. <i>centos</i> has changed, the build server
        triggers the build of depending images.
      difficultyOfImplementation:
        knowledge: 3
        time: 2
        resources: 2
      usefulness: 3
      level: 2
      implementation: []
      references:
        samm2:
        - O-EM-1-B
        iso27001-2017:
        - 12.6.1
      isImplemented: false
      evidence: ""
      comments: ""
    Reduction of the attack surface:
      risk: Unneeded components and permissions can be exploited.
      measure: Removal of unneeded components, dependencies, files or file access
        rights. For container images the usage of distroless images is recommended.
      difficultyOfImplementation:
        knowledge: 3
        time: 3
        resources: 2
      usefulness: 3
      level: 2
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/distroless
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/fedora-coreos
      references:
        samm2:
        - I-SB-2
        iso27001-2017:
        - hardening is missing in ISO 27001
        - 14.2.1
        d3f:
        # PlatformHardening
        - LocalFilePermissions
        - SystemConfigurationPermissions
        # ApplicationHardening
        - DeadCodeElimination
        - ApplicationConfigurationHardening
        # AssetInventory
        - SoftwareInventory
      isImplemented: false
      evidence: ""
      comments: ""
    Usage of a maximum lifetime for images:
      risk: >-
        Vulnerabilities in long-running container images can be exploited.
        Long running containers have potential memory leaks.
        A compromised container might get killed by restarting the container (e.g.
        in case the attacker has not reached the persistence layer).
      measure: A maximum lifetime for images is defined, e.g. 30 days. The project
        images, based on the nightly builded images, are deployed at leased once within
        the defined lifetime. Third Party images are deployed at least once within
        the defined lifetime.
      difficultyOfImplementation:
        knowledge: 3
        time: 4
        resources: 2
      usefulness: 3
      level: 2
      implementation: []
      references:
        samm2:
        - O-EM-1-B
        iso27001-2017:
        - 12.6.1
      isImplemented: false
      evidence: ""
      comments: ""
    Usage of a short maximum lifetime for images:
      risk: *exploit-known-vulnerabilities
      measure: |
        Build and deploy an artifact whenever a new component (e.g. package, container base image)
        is available, or on a periodic basis, according to an established policy.
      difficultyOfImplementation:
        knowledge: 3
        time: 4
        resources: 2
      usefulness: 3
      level: 4
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/sample-concept-1
      references:
        samm2:
        - O-EM-2-B
        iso27001-2017:
        - 12.6.1
      isImplemented: false
      evidence: ""
      comments: ""
...
