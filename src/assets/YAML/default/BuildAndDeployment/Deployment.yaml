---
Build and Deployment:
  Deployment:
    Blue/Green Deployment:
      risk: A new artifact's version can have unknown defects.
      measure: |-
        Using a blue/green deployment strategy increases application availability
        and reduces deployment risk by simplifying the rollback process if a deployment fails.
      difficultyOfImplementation:
        knowledge: 1
        time: 2
        resources: 1
      usefulness: 2
      level: 5
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/blue-green-deploymen
      dependsOn:
      - Smoke Test
      references:
        samm2:
        - TODO
        iso27001-2017:
        - 17.2.1  # Availability of information processing facilities
        - 12.1.1  # Documented operational procedures
        - 12.1.2  # Change management
        - 12.1.4  # Separation of development,testing and operational environments
        - 12.5.1
        - 14.2.9
        iso27001-2022:
        - 8.14
        - 5.37
        - 8.31
        - 8.32
        - 8.19
        - 8.29
      isImplemented: false
      evidence: ""
      comments: ""
    Defined decommissioning process:
      description: |-
        The decommissioning process in the context of Docker and Kubernetes involves
        retiring Docker containers, images, and Kubernetes resources that are no longer
        needed or have been replaced. This process must be carefully executed to avoid
        impacting other services and applications.
      risk: >-
        Unused applications are not maintained and may contain vulnerabilities.
        Once exploited they can be used to attack other applications or
        to perform lateral movements within the organization.
      measure: A clear decommissioning process ensures the removal of unused applications.
      difficultyOfImplementation:
        knowledge: 1
        time: 2
        resources: 1
      usefulness: 2
      level: 2
      references:
        samm2:
        - O-OM-2-B
        iso27001-2017:
        - 11.2.7
        iso27001-2022:
        - 7.14
      isImplemented: false
      evidence: ""
      comments: ""
    Defined deployment process:
      risk: >-
        Deployment of insecure or malfunctioning artifacts.
      measure: >-
        Defining a deployment process ensures that there are
        established criteria in terms of functionalities,
        security, compliance, and performance,
        and that the artifacts meet them.
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 1
      usefulness: 4
      level: 1
      dependsOn:
      - Continuous Integration
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/ci-cd-tools
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/docker
      references:
        samm2:
        - I-SD-1-A
        iso27001-2017:
        - 12.1.1
        - 14.2.2
        iso27001-2022:
        - 5.37
        - 8.32
      isImplemented: false
      evidence: ""
      comments: ""
    Environment depending configuration parameters (secrets):
      risk: >-
        Unauthorized access to secrets stored in source code
        or in artifacts (e.g. container images)
        through process listing (e.g. ps -ef).
      measure: >-
        Set configuration parameters via environment variables 
        stored using specific platform functionalities
        or secrets management systems
        (e.g. Kubernetes secrets or Hashicorp Vault).
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 1
      usefulness: 4
      level: 2
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/hasicorp-vault
      references:
        samm2:
        - I-SD-1-B
        iso27001-2017:
        - 9.4.5
        - 14.2.6
        iso27001-2022:
        - 8.4
        - 8.31
        d3f:
        - ApplicationConfigurationHardening
      isImplemented: false
      evidence: ""
      comments: ""
    Handover of confidential parameters:
      risk: 'Parameters are often used to set credentials, for example by starting
        containers or applications; these parameters can often be seen by any one
        listing running processes on the target system.'
      measure: >-
        Encryption ensures confidentiality of credentials
        e.g. from unauthorized access on the file system.
        Also, the usage of a credential management system can help protect
        credentials.
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 1
      usefulness: 4
      level: 3
      implementation: ""
      dependsOn:
      - Environment depending configuration parameters (secrets)
      references:
        samm2:
        - I-SD-2-B
        iso27001-2017:
        - 14.1.3
        - 13.1.3
        - 9.4.3
        - 9.4.1
        - 10.1.2
        iso27001-2022:
        - 8.33
        - 8.22
        - 5.17
        - 8.3
        - 8.24
        d3f:
        - ApplicationConfigurationHardening
      isImplemented: false
      evidence: ""
      comments: ""
    Inventory of dependencies:
      risk: In case a vulnerability of severity high or critical is known by the organization,
        it needs to be known where an artifacts with that vulnerability is deployed
        with which dependencies.
      measure: A documented inventory of dependencies used in images and containers
        exists.
      dependsOn:
      - Defined deployment process
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 3
      usefulness: 3
      dependsOn:
      - SBOM of components
      level: 3
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/dependencyTrack
      references:
        samm2:
        - I-SD-2-A
        iso27001-2017:
        - 8.1
        - 8.2
        iso27001-2022:
        - 5.9
        - 5.12
      isImplemented: false
      evidence: ""
      comments: ""
    Inventory of running artifacts:
      risk: In case a vulnerability of severity high or critical exists, it needs
        to be known where an artifacts (e.g. container image) with that vulnerability
        is deployed.
      measure: A documented inventory or a possibility to gather the needed information.
      dependsOn:
      - Defined deployment process
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 3
      usefulness: 3
      level: 3
      implementation: []
      references:
        samm2:
        - I-SD-2-A
        iso27001-2017:
        - 8.1
        - 8.2
        iso27001-2022:
        - 5.9
        - 5.12
      isImplemented: false
      evidence: ""
      comments: ""
    Rolling update on deployment:
      risk: While a deployment is performed, the application can not be reached.
      measure: A deployment without downtime is performed*.
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 2
      usefulness: 2
      level: 3
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/docker
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/webserver
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/rolling-update
      dependsOn:
      - Defined deployment process
      references:
        samm2:
        - I-SD-1-A
        iso27001-2017:
        - 12.5.1
        - 14.2.2
        - 17.2.1
        iso27001-2022:
        - 8.19
        - 8.32
        - 8.14
      isImplemented: false
      evidence: ""
      comments: ""
    Same artifact for environments:
      risk: Building of an artifact for different environments means that an untested
        artifact might reach the production environment.
      measure: Building an artifact once and deploying it to different environments
        means that only tested artifacts are allowed to reach the production environment
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 1
      usefulness: 4
      level: 4
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/docker
      dependsOn:
      - Defined build process
      references:
        samm2:
        - I-SD-2-A
        iso27001-2017:
        - 14.3.1
        - 14.2.8
        - 12.1.4
        iso27001-2022:
        - 8.33
        - 8.29
        - 8.31
      isImplemented: false
      evidence: ""
      comments: ""
    Usage of feature toggles:
      risk: Using environment variables to enable or disable features can lead to
        a situation where a feature is accidentally enabled in the production environment.
      measure: Usage of environment independent configuration parameter, called static feature
        toggles, mitigates the risk of accidentally enabling insecure features in production.
      difficultyOfImplementation:
        knowledge: 2
        time: 1
        resources: 1
      usefulness: 2
      level: 4
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/docker
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/martin-feature-toggles
      dependsOn:
      - Same artifact for environments
      references:
        samm2: []
        iso27001-2017:
        - 14.3.1
        - 14.2.8
        - 14.2.9
        - 12.1.4
        iso27001-2022:
        - 8.33
        - 8.29
        - 8.31
        d3f: 
        - ApplicationConfigurationHardening
      isImplemented: false
      evidence: ""
      comments: ""
    Evaluation of the trust of used components:
      risk:
        - Application and system components like Open Source libraies or images can have implementation flaws or deployment flaws.
        - Developers or operations might start random images in the production cluster 
          which have malicious code or known vulnerabilities.
      measure:
        - Each components source is evaluated to be trusted. For example the source, number of developers included, email configuration used by maintainers to prevent maintainer account theft, typo-squatting, ...
        - Create image assessment criteria, perform an evaluation of images and create a whitelist of artifacts/container images/virtual machine images.
      difficultyOfImplementation:
        knowledge: 3
        time: 3
        resources: 1
      usefulness: 3
      level: 2
      implementation:
        - $ref: src/assets/YAML/default/implementations.yaml#/implementations/kubernetes-admission
        - $ref: src/assets/YAML/default/implementations.yaml#/implementations/packj
      references:
        samm2:
          - O-EM-1-A
        iso27001-2017:
         - Not explicitly covered by ISO 27001 - too specific
         - 14.2.1
         - 14.2.5
        iso27001-2022:
         - Not explicitly covered by ISO 27001 - too specific
         - 8.25
         - 8.27
      isImplemented: false
      evidence: ""
      comments: ""
...
